# -*- coding: utf-8 -*-
"""init product tables

Revision ID: 522647dc5098
Revises: b93875e93882
Create Date: 2023-02-22 23:40:20.523789

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import oracle

# revision identifiers, used by Alembic.
revision = "522647dc5098"
down_revision = "b93875e93882"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "products",
        sa.Column("id", oracle.NUMBER(precision=10, asdecimal=False), nullable=False),
        sa.Column("username", oracle.VARCHAR2(length=255), nullable=True),
        sa.Column("description", oracle.VARCHAR2(length=255), nullable=True),
        sa.Column("url", oracle.VARCHAR2(length=255), nullable=True),
        sa.Column("xpath", oracle.VARCHAR2(length=255), nullable=True),
        sa.Column("disabled", oracle.VARCHAR2(length=1), nullable=True),
        sa.Column(
            "hist_size_days",
            oracle.NUMBER(precision=10, asdecimal=False),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["username"],
            ["users.username"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_products_username"), "products", ["username"], unique=False
    )
    op.create_table(
        "products_hist",
        sa.Column("id", oracle.NUMBER(precision=10, asdecimal=False), nullable=False),
        sa.Column(
            "product_id", oracle.NUMBER(precision=10, asdecimal=False), nullable=True
        ),
        sa.Column(
            "price", oracle.NUMBER(precision=10, scale=2, asdecimal=True), nullable=True
        ),
        sa.Column("date", oracle.DATE(), nullable=True),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_products_hist_product_id"),
        "products_hist",
        ["product_id"],
        unique=False,
    )
    # ### end Alembic commands ###
    op.execute(
        "create sequence products_seq start with 1 increment by 1 nocache nocycle"
    )
    op.execute(
        "create sequence products_hist_seq start with 1 increment by 1 nocache nocycle"
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_products_hist_product_id"), table_name="products_hist")
    op.drop_table("products_hist")
    op.drop_index(op.f("ix_products_username"), table_name="products")
    op.drop_table("products")
    # ### end Alembic commands ###
    op.execute(sa.schema.DropSequence(sa.Sequence("products_seq")))
    op.execute(sa.schema.DropSequence(sa.Sequence("products_hist_seq")))
